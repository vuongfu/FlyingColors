@model PagedList.IPagedList<TutorOnline.Web.Models.TransactionListViewModels>
@using PagedList.Mvc;
@using TutorOnline.Common;
@{
    TranStringCommon TranString = new TranStringCommon();
    ViewBag.Title = "View Transaction";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<link href="~/Scripts/bootstrap-datepicker.css" rel="stylesheet" />
<link href="~/Scripts/bootstrap-datepicker.standalone.css" rel="stylesheet" />

<section>
    <div class="col-lg-offset-1 col-lg-10">
        <h3> Lịch sử giao dịch</h3>
        <hr />
        @using (Html.BeginForm("ViewTransaction", "Student", FormMethod.Get))
        {
            <br />
            <table class="row">
                <tr>
                    <th class="col-lg-3" style="font-weight: bold;">
                        Nội dung giao dịch
                    </th>
                    <th class="col-lg-offset-1 col-lg-2" style="font-weight: bold;">
                        @TranString.StartDate
                    </th>
                    <th class="col-lg-offset-1 col-lg-2" style="font-weight: bold;">
                        @TranString.EndDate
                    </th>
                    <th></th>
                    <th></th>
                </tr>
                <tr>
                    <th class="col-lg-3">
                        @Html.TextBox("Content", null, htmlAttributes: new { @class = "form-control" })
                    </th>
                    <th class="col-lg-offset-1 col-lg-2">
                        @Html.TextBox("StartDate", null, htmlAttributes: new { @class = "form-control datepicker", id = "dateFrom", onkeypress = "keyPressListener(event)" })
                    </th>
                    <th class="col-lg-offset-1 col-lg-2">
                        @Html.TextBox("EndDate", null, htmlAttributes: new { @class = "form-control datepicker", id = "dateTo", onkeypress = "keyPressListener(event)" })
                    </th>
                    <th><input type="submit" name="Search" value="@TranString.Search" class="btn" /></th>
                    <th><h4>Số dư: @ViewBag.Balance NVĐ</h4></th>
                   
                </tr>
            </table>
            <hr />
            if (ViewBag.searchClick == true)
            {
                <h4>@ViewBag.totalRecord</h4>
            }

            if (Model.FirstOrDefault() != null)
            {
                <table class="table table-striped">
                    <tr>
                        <th>
                            @TranString.Number
                        </th>
                        <th>
                            @TranString.TransId
                        </th>
                        <th>
                            @TranString.Content
                        </th>
                        <th>
                            @TranString.Amount
                        </th>
                        <th>
                            @TranString.TransDate
                        </th>
                    </tr>

                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @(ViewBag.Count++)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TransactionId)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Content)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Amount)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TranDate)
                            </td>
                        </tr>
                    }

                </table>
                <br />
                <div>@TranString.Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) @TranString.Of @Model.PageCount @TranString.Page1</div>
                @Html.PagedListPager(Model, page => Url.Action("ViewTransaction", new { page, searchString = ViewBag.SearchStr, roleString = ViewBag.RoleStr, Startdate = ViewBag.StartDate, EndDate = ViewBag.EndDate }))
            }
        }
        <a class="btn btn-success navbar-btn" href="@Url.Action("index", "Student")">Quay lại</a>
    </div>
</section>

<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.1/jquery.js"></script>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.14/jquery-ui.min.js"></script>
<link rel="stylesheet" type="text/css" media="screen" href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.14/themes/base/jquery-ui.css">

<script>

    var startDate, endDate;
    var dateRegex = '^(((0[1-9]|[12][0-9]|30)[-/]?(0[13-9]|1[012])|31[-/]?(0[13578]|1[02])|(0[1-9]|1[0-9]|2[0-8])[-/]?02)[-/]?[0-9]{4}|29[-/]?02[-/]?([0-9]{2}(([2468][048]|[02468][48])|[13579][26])|([13579][26]|[02468][048]|0[0-9]|1[0-6])00))$';
    $('#dateTo').blur(function () {
        var str = $('#dateTo').val();
        if (!str.match(dateRegex)) {
            $('#dateTo').val("");
            endDate = null;
            return false;
        }

        var date = str.substring(0, 2);
        var month = str.substring(3, 5);
        var year = str.substring(6);
        var fulldate = month + "/" + date + "/" + year;

        endDate = new Date(fulldate);
        if (startDate != null && endDate < startDate) {
            startDate = endDate;
            $('#dateFrom').val(convertDate(endDate));
        }
    });

    $('#dateFrom').blur(function () {
        var str = $('#dateFrom').val();
        if (!str.match(dateRegex)) {
            $('#dateFrom').val("");
            startDate = null;
            return false;
        }

        var date = str.substring(0, 2);
        var month = str.substring(3, 5);
        var year = str.substring(6);
        var fulldate = month + "/" + date + "/" + year;

        startDate = new Date(fulldate);
        if (endDate != null && startDate > endDate) {
            endDate = startDate;
            $('#dateTo').val(convertDate(startDate));
        }

    });

    $("#dateFrom").datepicker({ dateFormat: "dd/mm/yy" });
    $("#dateTo").datepicker({ dateFormat: "dd/mm/yy" });

    $('.datepicker').datepicker({
        format: 'd/M/yyyy',
        showOtherMonths: true,
        selectOtherMonths: true,
        forceParse: false,
        onSelect: function (dateText, inst) {
            var id = inst.id;
            var startDateStr = $('#dateTo').val();
            var endDateStr = $('#dateTo').val();

            if (startDateStr == "") {
                startDate = null;
            }

            if (endDateStr == "") {
                endDate = null;
            }

            if (id == "dateFrom") {
                startDate = new Date(dateText);
            } else {
                endDate = new Date(dateText);
            }

            if (startDate != null && endDate != null) {
                if (startDate > endDate) {
                    if (id == "dateFrom") {
                        endDate = startDate;
                        $('#dateFrom').val(convertDate(startDate));
                        $('#dateTo').val(convertDate(startDate));
                    } else {
                        startDate = endDate;
                        $('#dateFrom').val(convertDate(endDate));
                        $('#dateTo').val(convertDate(endDate));
                    }
                } else {
                    $('#dateFrom').val(convertDate(startDate));
                    $('#dateTo').val(convertDate(endDate));
                }
            } else {
                if (startDate == null) {
                    $('#dateTo').val(convertDate(endDate));
                } else {
                    $('#dateFrom').val(convertDate(startDate));
                }
            }

        }
    }).bind("keypress", function (e) {
        if (e.keyCode == 13) {
            e.preventDefault();
            e.stopPropagation();
            var id = e.target.id;
            $('#' + id).blur();
        }
    });

    function convertDate(inputFormat) {
        function pad(s) { return (s < 10) ? '0' + s : s; }
        var d = new Date(inputFormat);
        return [pad(d.getDate()), pad(d.getMonth() + 1), d.getFullYear()].join('/');
    }

    function keyPressListener(e) {
        if (e.keyCode == 13) {
            $('input[type=submit]').focus();
        }
        if (e.keyCode == 45) {
            var id = e.target.id;
            var str = $('#' + id).val();
            str += "-";
            $('#' + id).val(str);
        }
    }
</script>