@model PagedList.IPagedList<TutorOnline.Web.Models.TransactionListViewModels>
@using PagedList.Mvc;
@using TutorOnline.Common;
@{
    TranStringCommon TranString = new TranStringCommon();
    ViewBag.Title = "ViewTransaction";
    Layout = "~/Views/Shared/_Layout_Tutor.cshtml";
}

<style>
    .caps {
        text-transform: uppercase;
    }

    .row-narrow {
        margin-left: -5px;
        margin-right: -5px;
    }

    hr {
        border-color: rgba(0, 0, 0, 0.2);
        color: rgba(0, 0, 0, 0.2);
        background: rgba(0, 0, 0, 0.2);
    }

    .well {
        background-color: #f1f1f1;
    }
</style>

<div class="container-fluid">
    <div class="well">
        <h3 class="caps">
            <strong>Lịch sử giao dịch</strong>
        </h3>
        <hr />
        @using (Html.BeginForm("ViewTransaction", "Tutor", FormMethod.Get))
        {
            <table>
                <tr>
                    <td class="text-right"><b>Nội dung:&nbsp;</b></td>
                    <td class="text-left">@Html.TextBox("SearchString", null, htmlAttributes: new { @class = "form-control" })</td>
                    <td style="padding-left:15px;"></td>
                    <td class="text-right"><b>Từ ngày:&nbsp;</b></td>
                    <td class="text-left">@Html.TextBox("StartDate", null, htmlAttributes: new { @class = "form-control datepicker" , id = "dateFrom", onkeypress = "keyPressListener(event)" })</td>
                    <td style="padding-left:15px;"></td>
                    <td class="text-right"><b>Đến ngày:&nbsp;</b></td>
                    <td class="text-left">@Html.TextBox("EndDate", null, htmlAttributes: new { @class = "form-control datepicker" , id = "dateTo", onkeypress = "keyPressListener(event)" })</td>
                    <td style="padding-left:15px;"></td>
                    <td class="text-right"><input type="submit" name="Search" value="@TranString.Search" class="btn" /></td>
                </tr>
            </table>
        }



        <hr />

        @if (ViewBag.searchClick == true)
        {
            <p>Số kết quả tìm được: @ViewBag.totalRecord</p>
        }

        @if (Model.FirstOrDefault() != null)
        {
            <div class="form-group">
                <table class="table table-hover table-striped">
                    <tr>
                        <th>
                            @TranString.Number
                        </th>
                        <th>
                            Mã giao dịch
                        </th>
                        <th>
                            @TranString.Content
                        </th>
                        <th>
                            @TranString.Amount
                        </th>
                        <th>
                            @TranString.TransDate
                        </th>
                    </tr>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @(ViewBag.Count++)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TransactionId)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Content)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Amount)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TranDate)
                            </td>
                        </tr>
                    }
                </table>
            </div>

            <br />
            <div>@TranString.Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) @TranString.Of @Model.PageCount @TranString.Page1</div>
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchString = ViewBag.SearchStr,  Startdate = ViewBag.StartDate, EndDate = ViewBag.EndDate }))
        }

    </div>
</div>


<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.1/jquery.js"></script>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.14/jquery-ui.min.js"></script>
<link rel="stylesheet" type="text/css" media="screen" href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.14/themes/base/jquery-ui.css">

<script>
    var startDate, endDate;
    var dateRegex = '^(((0[1-9]|[12][0-9]|30)[-/]?(0[13-9]|1[012])|31[-/]?(0[13578]|1[02])|(0[1-9]|1[0-9]|2[0-8])[-/]?02)[-/]?[0-9]{4}|29[-/]?02[-/]?([0-9]{2}(([2468][048]|[02468][48])|[13579][26])|([13579][26]|[02468][048]|0[0-9]|1[0-6])00))$';
    $('#dateTo').blur(function () {
        var str = $('#dateTo').val();        
        if (!str.match(dateRegex)) {
            $('#dateTo').val("");
            endDate = null;
            return false;
        }

        var date = str.substring(0, 2);
        var month = str.substring(3, 5);
        var year = str.substring(6);
        var fulldate = month + "/" + date + "/" + year;

        endDate = new Date(fulldate);
        if (startDate != null && endDate < startDate) {
            startDate = endDate;
            $('#dateFrom').val(convertDate(endDate));
        }
    });

    $('#dateFrom').blur(function () {
        var str = $('#dateFrom').val();        
        if (!str.match(dateRegex)) {
            $('#dateFrom').val("");
            startDate = null;
            return false;
        }

        var date = str.substring(0, 2);
        var month = str.substring(3, 5);
        var year = str.substring(6);
        var fulldate = month + "/" + date + "/" + year;

        startDate = new Date(fulldate);
        if (endDate != null && startDate > endDate) {
            endDate = startDate;
            $('#dateTo').val(convertDate(startDate));
        }

    });

    $('.datepicker').datepicker({
        showOtherMonths: true,
        selectOtherMonths: true,
        forceParse: false,
        onSelect: function (dateText, inst) {
            var id = inst.id;
            var startDateStr = $('#dateTo').val();
            var endDateStr = $('#dateTo').val();

            if (startDateStr == "") {
                startDate = null;
            }

            if (endDateStr == "") {
                endDate = null;
            }

            if (id == "dateFrom") {
                startDate = new Date(dateText);
            } else {
                endDate = new Date(dateText);
            }

            if (startDate != null && endDate != null) {
                if (startDate > endDate) {
                    if (id == "dateFrom") {
                        endDate = startDate;
                        $('#dateFrom').val(convertDate(startDate));
                        $('#dateTo').val(convertDate(startDate));
                    } else {
                        startDate = endDate;
                        $('#dateFrom').val(convertDate(endDate));
                        $('#dateTo').val(convertDate(endDate));
                    }
                } else {
                    $('#dateFrom').val(convertDate(startDate));
                    $('#dateTo').val(convertDate(endDate));
                }
            } else {
                if (startDate == null) {
                    $('#dateTo').val(convertDate(endDate));
                } else {
                    $('#dateFrom').val(convertDate(startDate));
                }
            }
            
        }
    }).bind("keypress", function (e) {
        if (e.keyCode == 13) {
            e.preventDefault();
            e.stopPropagation();
            var id = e.target.id;
            $('#' + id).blur();
        }
    });

    function convertDate(inputFormat) {
        function pad(s) { return (s < 10) ? '0' + s : s; }
        var d = new Date(inputFormat);
        return [pad(d.getDate()), pad(d.getMonth() + 1), d.getFullYear()].join('-');
    }

    function keyPressListener(e) {
        if (e.keyCode == 13) {
            $('input[type=submit]').focus();
        }
        if (e.keyCode == 45) {
            var id = e.target.id;
            var str = $('#' + id).val();
            str += "-";
            $('#' + id).val(str);
        }
    }


</script>