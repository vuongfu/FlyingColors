@model TutorOnline.Web.Models.DetailBookedSlotByStudent

@{
    ViewBag.Title = "GetSlotDetail";
    Layout = "~/Views/Shared/_Layout_Tutor.cshtml";
}
<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">

<div class="container">
    <div class="col-xs-12 col-sm-6 col-md-8 col-sm-offset-1 col-md-offset-1">
        <div class="row">
            <div class="col-xs-6 col-sm-6 col-md-6" align="center">
                <h3>Thông tin học sinh</h3>
            </div>
            <div class="col-xs-6 col-sm-6 col-md-6" align="center">
                <h3>Thông tin tiết học</h3>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-6 col-sm-6 col-md-6">
                <div class="row">
                    @if (String.IsNullOrEmpty(Model.Photo))
                    {
                        <div class="avatarDetail" style="background-image: url(../../Image/TutorOnline_Icon.png)"></div>
                    }
                    else
                    {
                        <div class="avatarDetail" style="background-image: url(~/Content/Uploads/Images/@Model.Photo)"></div>
                    }
                </div>
                <div class="row">
                    <div class="col-xs-6 col-sm-6 col-md-6" id="dataStu">
                        <b>Họ và tên:</b>
                    </div>
                    <div class="col-xs-6 col-sm-6 col-md-6">
                        @Html.DisplayFor(model => model.FullName)
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-6 col-sm-6 col-md-6 " id="dataStu">
                        <b>Giới tính:</b>
                    </div>
                    <div class="col-xs-6 col-sm-6 col-md-6">
                        @Html.DisplayFor(model => model.Gender)
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-6 col-sm-6 col-md-6 " id="dataStu">
                        <b>Số điện thoại:</b>
                    </div>
                    <div class="col-xs-6 col-sm-6 col-md-6">
                        @Html.DisplayFor(model => model.Phone)
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-6 col-sm-6 col-md-6 " id="dataStu">
                        <b>Địa chỉ Email:</b>
                    </div>
                    <div class="col-xs-6 col-sm-6 col-md-6">
                        @Html.DisplayFor(model => model.Email)
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-6 col-sm-6 col-md-6 " id="dataStu">
                        <b>Skype:</b>
                    </div>
                    <div class="col-xs-6 col-sm-6 col-md-6">
                        @Html.DisplayFor(model => model.Skype)
                    </div>
                </div>
            </div>
            <div class="col-xs-6 col-sm-6 col-md-6">
                <div class="row">
                    <div class="col-xs-6 col-sm-6 col-md-6 " id="dataLesson">
                        <b>Môn học:</b>
                    </div>
                    <div class="col-xs-6 col-sm-6 col-md-6">
                        @Html.DisplayFor(model => model.Category)
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-6 col-sm-6 col-md-6 " id="dataLesson">
                        <b>Khóa học:</b>
                    </div>
                    <div class="col-xs-6 col-sm-6 col-md-6">
                        @Html.DisplayFor(model => model.Subject)
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-6 col-sm-6 col-md-6 " id="dataLesson">
                        <b>Bài học:</b>
                    </div>
                    <div class="col-xs-6 col-sm-6 col-md-6">

                        <div class="col-sm-8 col-md-8 col-xs-8" style="margin-left:-15px;">
                            <div id="lbLesson">@Html.DisplayFor(model => model.Lesson)</div>
                            @Html.DropDownList("LessonId", null, htmlAttributes: new { @class = "hidden", id = "dropLesson", style = "width:100px;" })
                        </div>
                        <div class="col-sm-4 col-md-4 col-xs-4">
                            <i class="material-icons button edit" onclick="btnEditClick()" id="iconEdit">edit</i>
                        </div>


                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-6 col-sm-6 col-md-6 " id="dataLesson">
                        <b>Ngày học:</b>
                    </div>
                    <div class="col-xs-6 col-sm-6 col-md-6">
                        @Html.DisplayFor(model => model.Date)
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-6 col-sm-6 col-md-6 " id="dataLesson">
                        <b>Thời gian:</b>
                    </div>
                    <div class="col-xs-6 col-sm-6 col-md-6">
                        @Html.DisplayFor(model => model.OrderTime)
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-6 col-sm-6 col-md-6 " id="dataLesson">
                        <b>Trạng thái:</b>
                    </div>
                    <div class="col-xs-6 col-sm-6 col-md-6">
                        @Html.DisplayFor(model => model.StatusName)
                    </div>
                </div>
                <br />
                <div class="row hidden" align="center" id="startLabel">
                    <b>Bắt đầu học sau:</b>
                </div>
                <div class="row hidden" align="center" style="margin-left:15px;" id="clockRow">
                    <h4 id="ClockCountDown"></h4>
                </div>
            </div>
        </div>
        <br />
        <div class="row col-sm-offset-1 col-md-offset-1">
            <button type="button" class="btn btn-success" data-toggle="modal" data-target="#FeedbackModal" id="btnFeedback">Đánh giá học sinh</button>
            <button type="button" class="btn hidden" data-toggle="modal" data-target="#Loading" data-backdrop="static" id="btnLoad">Load</button>
            @Html.ActionLink("Quay lại", "ViewSchedule", null, new { @class = "btn btn-success" })
        </div>
    </div>
</div>
<!-- Modal loading -->
<div class="modal fade" id="Loading" role="dialog">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <h4 id="TitleLoading">Đang lưu feedback...</h4>
            </div>
            <div class="modal-body">
                <div align="center">
                    <img src="~/Image/Loading2.gif" id="loadingImg" width="150" height="150" />
                    <h5 id="MessSave"></h5>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" id="btnCloseSaveModal">Đóng</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal feedback -->
<div class="modal fade" id="FeedbackModal" role="dialog">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Đánh giá học sinh</h4>
            </div>
            <div class="modal-body">
                <div class="container">
                    <div class="row">
                        <div class="col-sm-8 col-md-8" id="dataRating">
                            @for (int i = 0; i < Model.CriteriaContent.Count(); i++)
                            {
                                <div class="row">
                                    <div class="col-sm-5 col-md-5" align="right">
                                        <b id="@Model.CriteriaId[i]0">@Model.CriteriaContent[i]:</b>
                                    </div>
                                    <div class="col-sm-3 col-md-3">
                                        <span class="rating">
                                            <input id="@Model.CriteriaId[i]5" type="radio" name="@Model.CriteriaId[i]" value="5">
                                            <label for="@Model.CriteriaId[i]5">5</label>
                                            <input id="@Model.CriteriaId[i]4" type="radio" name="@Model.CriteriaId[i]" value="4">
                                            <label for="@Model.CriteriaId[i]4">4</label>
                                            <input id="@Model.CriteriaId[i]3" type="radio" name="@Model.CriteriaId[i]" value="3" checked>
                                            <label for="@Model.CriteriaId[i]3">3</label>
                                            <input id="@Model.CriteriaId[i]2" type="radio" name="@Model.CriteriaId[i]" value="2" >
                                            <label for="@Model.CriteriaId[i]2">2</label>
                                            <input id="@Model.CriteriaId[i]1" type="radio" name="@Model.CriteriaId[i]" value="1">
                                            <label for="@Model.CriteriaId[i]1">1</label>
                                        </span>
                                    </div>
                                    <div class="col-sm-4 col-md-4"></div>
                                </div>

                            }
                            <br />
                            <div class="row">
                                <div class="col-sm-2 col-md-2" align="right">
                                    <b>Nhận xét:</b>
                                </div>
                                <div class="col-md-5 col-sm-5">
                                    <textarea class="form-control" style="width:100%;" id="CommentFeedback" name="CommentFeedback" rows="5">@(Model.Comment == null ? "" : Model.Comment)</textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" id="btnSubmitFeedback" onclick="SaveFeedBack()">Lưu lại</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>


<script src="~/Scripts/jquery-3.1.1.js"></script>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.14/jquery-ui.min.js"></script>
<link rel="stylesheet" type="text/css" media="screen" href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.14/themes/base/jquery-ui.css">
<script src="~/Scripts/bootstrap.js"></script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    var listCreId = new Array();
    var listValue = new Array();
    var Today = new Date();
    var lessonId = $("#dropLesson :selected").val();
    var lessonName = $("#dropLesson :selected").text();
    var isChange = false;
    var comment;


    function btnEditClick(){
        isChange = !isChange;
        if(isChange){
            document.getElementById("iconEdit").innerHTML = "save";
            jQuery('#dropLesson').removeClass('hidden');
            jQuery('#lbLesson').addClass('hidden');
        }
        else{
            document.getElementById("iconEdit").innerHTML = "edit";
            jQuery('#dropLesson').addClass('hidden');
            jQuery('#lbLesson').removeClass('hidden');
            lessonId = $("#dropLesson :selected").val();
            lessonName = $("#dropLesson :selected").text();
            document.getElementById("lbLesson").innerHTML = lessonName;
            LoadFeebback()
        }

    }

    function getDataFeedBack() {
        comment = $("textarea[name='CommentFeedback']").val();
        for(i in listCreId){
            listValue.push($("input[type='radio'][name='" + listCreId[i] + "']:checked").val());
        }

    }

    function LoadFeebback(){
        listValue.splice(0, listValue.length);
        listCreId.splice(0, listCreId.length);
        $.ajax({
            url: '@Url.Action("CheckFeedBack", "Tutor")',
            dataType: "json",
            type: "POST",
            contentType: 'application/json; charset=utf-8',
            traditional: true,
            data: JSON.stringify({ 'scheduleId': @Model.ScheduleId, 'lessonId':lessonId }),
            success: function (data) {
                if(data.isfeedback == false){
                    var dataStr = "";
                    for(i in data.dataForCriteId){
                        listCreId.push(data.dataForCriteId[i]);
                        dataStr += "<div class='row'><div class='col-sm-5 col-md-5' align='right'>";
                        dataStr += "<b>"+data.dataForCriteContent[i]+":</b></div><div class='col-sm-3 col-md-3'>";
                        dataStr += "<span class='rating'>";
                        dataStr += "<input id='"+data.dataForCriteId[i]+"5' type='radio' name='"+data.dataForCriteId[i]+"' value='5'>";
                        dataStr += "<label for='"+data.dataForCriteId[i]+"5'>5</label>";
                        dataStr += "<input id='"+data.dataForCriteId[i]+"4' type='radio' name='"+data.dataForCriteId[i]+"' value='4'>";
                        dataStr += "<label for='"+data.dataForCriteId[i]+"4'>4</label>";
                        dataStr += "<input id='"+data.dataForCriteId[i]+"3' type='radio' name='"+data.dataForCriteId[i]+"' value='3' checked>";
                        dataStr += "<label for='"+data.dataForCriteId[i]+"3'>3</label>";
                        dataStr += "<input id='"+data.dataForCriteId[i]+"2' type='radio' name='"+data.dataForCriteId[i]+"' value='2'>";
                        dataStr += "<label for='"+data.dataForCriteId[i]+"2'>2</label>";
                        dataStr += "<input id='"+data.dataForCriteId[i]+"1' type='radio' name='"+data.dataForCriteId[i]+"' value='1'>";
                        dataStr += "<label for='"+data.dataForCriteId[i]+"1'>1</label>";
                        dataStr += "</span></div><div class='col-sm-4 col-md-4'></div></div>";
                    }

                    dataStr += "<br /><div class='row'>";
                    dataStr += "<div class='col-sm-2 col-md-2' align='right'>";
                    dataStr += "<b>Nhận xét:</b>";
                    dataStr += "</div><div class='col-md-5 col-sm-5'>";
                    dataStr += "<textarea class='form-control' style='width:100%;' id='CommentFeedback' name='CommentFeedback' rows='5'>@(Model.Comment == null ? "" : Model.Comment)</textarea>";
                    dataStr += "</div></div>";


                    document.getElementById("dataRating").innerHTML = dataStr;
                    return false;
                }

                jQuery('#btnSubmitFeedback').addClass('hidden');
                document.getElementById("btnFeedback").innerHTML = "Xem đánh giá";
                document.getElementById("CommentFeedback").readOnly = "true";
                for(i in data){
                    var id = "" + data[i].criteriaId + "" + data[i].value;
                    document.getElementById(id).click();
                }
                jQuery('#iconEdit').addClass('hidden');
                var inputs = document.getElementsByTagName('input');
                for(var i = 0; i < inputs.length; i++)
                {
                    if(inputs[i].type == 'radio')
                    {
                        inputs[i].disabled = true;
                    }
                }
            },
            error: function (xhr) {

            }
        });

    }

    function SaveFeedBack() {
        if(isChange == true){
            var confirm = confirm("Bạn có muốn lưu thay đổi của bài học?");
            if(confirm == true){
                document.getElementById("iconEdit").click();
            }else{
                return false;
            }
        }

        getDataFeedBack();
        document.getElementById("btnFeedback").click();
        document.getElementById("btnLoad").click();
        jQuery('#loadingImg').removeClass('hidden');
        jQuery('#MessSave').addClass('hidden');
        jQuery('#btnCloseSaveModal').addClass('hidden');
        document.getElementById("TitleLoading").innerHTML = "Đang lưu đánh giá...";

        $.ajax({
            url: '@Url.Action("SaveFeedback", "Tutor")',
            dataType: "json",
            type: "POST",
            contentType: 'application/json; charset=utf-8',
            traditional: true,
            data: JSON.stringify({ 'listCreId': listCreId, 'listValue': listValue, 'scheduleId': @Model.ScheduleId, 'comment':comment}),
            success: function (data) {
                jQuery('#loadingImg').addClass('hidden');
                jQuery('#MessSave').removeClass('hidden');
                jQuery('#btnCloseSaveModal').removeClass('hidden');
                document.getElementById("MessSave").innerHTML = "Đánh giá về sinh viên đã được lưu lại.";
                document.getElementById("TitleLoading").innerHTML = "Lưu thành công.";
                document.getElementById("btnFeedback").innerHTML = "Xem đánh giá";
                document.getElementById("CommentFeedback").readOnly = "true";
                var inputs = document.getElementsByTagName('input');
                for(var i = 0; i < inputs.length; i++)
                {
                    if(inputs[i].type == 'radio')
                    {
                        inputs[i].disabled = true;
                    }
                }
                jQuery('#btnSubmitFeedback').addClass('hidden');
            },
            error: function (xhr) {
                jQuery('#loadingImg').addClass('hidden');
                jQuery('#MessSave').removeClass('hidden');
                jQuery('#btnCloseSaveModal').removeClass('hidden');
                document.getElementById("MessSave").innerHTML = "Có lỗi xảy ra trong quá trình lưu. <br>Xin hãy thử lại sau.";
                document.getElementById("TitleLoading").innerHTML = "Xảy ra lỗi.";
            }
        });
    }
    var slotDateEnd;
    var slotDateStart;

    function clockCount(){
        setInterval(function(){
            Today = new Date();

            var TotalMilisecs = slotDateStart.getTime() - Today.getTime(),
                cd = 24 * 60 * 60 * 1000,
                ch = 60 * 60 * 1000,
                cs = 60 * 1000;


            var days = Math.floor(TotalMilisecs / cd);
            var hours = Math.floor((TotalMilisecs - days * cd) / ch);
            var mins = Math.floor((TotalMilisecs - days * cd - hours * ch) / cs);
            var secs = Math.round((TotalMilisecs - days * cd - hours * ch - mins * cs) / 1000);
            if(secs === 60){
                mins++;
                secs = 0;
            }

            if( mins === 60 ){
                hours++;
                mins = 0;
            }
            if( hours === 24 ){
                days++;
                hours = 0;
            }

            var str = "" + days + " Ngày " + hours + " Giờ " + mins + " Phút " + secs + " Giây";
            document.getElementById("ClockCountDown").innerHTML = str;
            if(Today >= slotDateStart && Today <= slotDateEnd){
                document.getElementById("ClockCountDown").innerHTML = "Đang học";
                return false;
            }
            if(Today > slotDateEnd){
                document.getElementById("ClockCountDown").innerHTML = "Đã kết thúc";
                return false;
            }

        },1000);
    }

    $(document).ready(function(){
        if(@Model.Status == 5){
            jQuery('#btnFeedback').addClass('hidden');            
            return false;
        }

        if(@Model.Status == 5 || @Model.Status == 3){
            jQuery('#iconEdit').addClass('hidden');
        }

        var time = "@Model.OrderTime";
        slotDateStart = new Date(@Model.ScheduleDate.Year, (@Model.ScheduleDate.Month - 1), @Model.ScheduleDate.Day, time.substring(0,2), 0,0,0);
        if(slotDateStart > Today){
            clockCount();
            jQuery('#startLabel').removeClass('hidden');
            jQuery('#clockRow').removeClass('hidden');
        }

        slotDateEnd = new Date(@Model.ScheduleDate.Year, (@Model.ScheduleDate.Month - 1), @Model.ScheduleDate.Day, time.substring(8,10), time.substring(11),0,0);
        if(slotDateEnd > Today){
            jQuery('#btnFeedback').addClass('hidden');
            return false;
        }

        LoadFeebback();
    });

</script>

<style>
    .avatarDetail {
        width: 100px;
        height: 100px;
        margin: 10px auto 10px;
        border-radius: 100%;
        border: 2px solid #aaa;
        background-size: cover;
    }

    #dataStu {
        text-align: right;
    }

    .edit:hover {
        color: #0a79df;
    }

    .button {
        color: #aaa;
        cursor: pointer;
        vertical-align: middle;
    }

    #dataLesson {
        text-align: right;
    }

    .wrapper {
        padding: 20px;
        margin: 50px auto;
        width: 400px;
        min-height: 200px;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0,0,0,.1);
        background-color: #fff;
    }

    .rating {
        overflow: hidden;
        vertical-align: bottom;
        display: inline-block;
        width: auto;
        height: 20px;
        margin-right: 60px;
    }

        .rating > input {
            opacity: 0;
            margin-right: -100%;
        }

        .rating > label {
            position: relative;
            display: block;
            float: right;
            background: url('/Image/star-off-big.png');
            background-size: 20px 20px;
        }

            .rating > label:before {
                display: block;
                opacity: 0;
                content: '';
                width: 20px;
                height: 20px;
                background: url('/Image/star-on-big.png');
                background-size: 20px 20px;
                transition: opacity 0.2s linear;
            }

            .rating > label:hover:before,
            .rating > label:hover ~ label:before,
            .rating:not(:hover) > :checked ~ label:before {
                opacity: 1;
            }
</style>