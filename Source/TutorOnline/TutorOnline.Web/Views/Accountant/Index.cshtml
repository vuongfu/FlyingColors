@model PagedList.IPagedList<TutorOnline.Web.Models.TransactionListViewModels>
@using PagedList.Mvc;
@using TutorOnline.Common;
@{
    TranStringCommon TranString = new TranStringCommon();
    ViewBag.Title = TranString.IndexTitle;
    Layout = "~/Views/Shared/_Layout_BackendUser.cshtml";
}
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<link href="~/Scripts/bootstrap-datepicker.css" rel="stylesheet" />
<link href="~/Scripts/bootstrap-datepicker.standalone.css" rel="'stylesheet" />

<script>
    function Pay() {
        window.location = '/Accountant/PaySalary';
    }
</script>

@Html.Partial("_LoadingData")
<h2>@TranString.IndexTitle</h2>

    <br />
        <h4>
            @Html.ActionLink(TranString.CreateTransaction, "Search", new { area = "" }, new { @class = "btn btn-success navbar-btn" })
            @Html.ActionLink(TranString.ImportExcel, "ImportExcel", new { area = "" }, new { @class = "btn btn-success navbar-btn" })
            <button class="btn btn-success navbar-btn" onclick="Pay()">Trả lương cho tutor</button>
        </h4>
        @using (Html.BeginForm("Index", "Accountant", FormMethod.Get))
        {
                <br />
                <table class="row">
                    @*<div class="row">*@
                    <tr>
                        <th class="row col-lg-3">
                            <div class="row col-lg-10" style="font-weight: bold;">@TranString.UserType</div>
                        </th>
                        <th class="col-lg-3" style="font-weight: bold;">
                            Tìm kiếm
                        </th>
                        <th class="col-lg-offset-1 col-lg-2" style="font-weight: bold;">
                            @TranString.StartDate
                        </th>
                        <th class="col-lg-offset-1 col-lg-2" style="font-weight: bold;">
                            @TranString.EndDate
                        </th>
                    </tr>
                    @*</div>*@
                    @*<div class="row">*@
                    <tr>
                        <th class="col-lg-2">
                            @Html.DropDownList("roleString", null, "Tất cả", htmlAttributes: new { @class = "form-control" })
                        </th>
                        <th class="col-lg-offset-1 col-lg-3">
                            @Html.TextBox("SearchString", null, htmlAttributes: new { @class = "form-control" })
                        </th>
                        <th class="col-lg-offset-1 col-lg-2">
                            @Html.TextBox("StartDate", null, htmlAttributes: new { @class = "form-control datepicker", id = "dateFrom", onkeypress = "keyPressListener(event)" })
                        </th>
                        <th class="col-lg-offset-1 col-lg-2">
                            @Html.TextBox("EndDate", null, htmlAttributes: new { @class = "form-control datepicker", id = "dateFrom", onkeypress = "keyPressListener(event)" })
                        </th>
                    </tr>
                    @*</div>*@
                </table>

    <p></p>
    <input type="submit" name="Search" value="@TranString.Search" class="btn" />
    <br />
    if (ViewBag.searchClick == true)
    {
       <h4>@ViewBag.totalRecord</h4>
    }
    
    if (Model.FirstOrDefault() != null)
    {
        <table class="table table-striped">
            <tr>
                <th>
                    @TranString.Number
                </th>
                <th>
                    @TranString.TransId
                </th>
                <th>
                    @TranString.Content
                </th>
                <th>
                    @TranString.Amount
                </th>
                <th>
                    @TranString.TransDate
                </th>
                <th>
                    @TranString.Account
                </th>
                <th>
                    @TranString.UserType
                </th>
                <th>
                    @TranString.Name
                </th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @(ViewBag.Count++)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TransactionId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Content)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Amount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TranDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UserName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UserTypeName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                </tr>
            }

        </table>
        <br />
        <div>@TranString.Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) @TranString.Of @Model.PageCount @TranString.Page1</div>
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchString = ViewBag.SearchStr, roleString = ViewBag.RoleStr, Startdate = ViewBag.StartDate, EndDate = ViewBag.EndDate }))
        <input type="submit" name="Export" value="@TranString.Export" class="btn" />
    }
}

        <script src="~/Scripts/jquery-3.1.1.js"></script>
        <script src="~/Scripts/bootstrap.js"></script>
        <script src="~/Scripts/bootstrap-datepicker.js"></script>

        <script>
            $('.datepicker').datepicker({
                format: 'dd/mm/yyyy',
            });
            var startDate, endDate;
            var dateRegex = '^(((0[1-9]|[12][0-9]|30)[-/]?(0[13-9]|1[012])|31[-/]?(0[13578]|1[02])|(0[1-9]|1[0-9]|2[0-8])[-/]?02)[-/]?[0-9]{4}|29[-/]?02[-/]?([0-9]{2}(([2468][048]|[02468][48])|[13579][26])|([13579][26]|[02468][048]|0[0-9]|1[0-6])00))$';
            $('#dateTo').blur(function () {
                var str = $('#dateTo').val();
                if (!str.match(dateRegex)) {
                    $('#dateTo').val("");
                    endDate = null;
                    return false;
                }

                var date = str.substring(0, 2);
                var month = str.substring(3, 5);
                var year = str.substring(6);
                var fulldate = month + "/" + date + "/" + year;

                endDate = new Date(fulldate);
                if (startDate != null && endDate < startDate) {
                    startDate = endDate;
                    $('#dateFrom').val(convertDate(endDate));
                }
            });

            $('#dateFrom').blur(function () {
                var str = $('#dateFrom').val();
                if (!str.match(dateRegex)) {
                    $('#dateFrom').val("");
                    startDate = null;
                    return false;
                }

                var date = str.substring(0, 2);
                var month = str.substring(3, 5);
                var year = str.substring(6);
                var fulldate = month + "/" + date + "/" + year;

                startDate = new Date(fulldate);
                if (endDate != null && startDate > endDate) {
                    endDate = startDate;
                    $('#dateTo').val(convertDate(startDate));
                }

            });

            $('.datepicker').datepicker({
                showOtherMonths: true,
                selectOtherMonths: true,
                forceParse: false,
                onSelect: function (dateText, inst) {
                    var id = inst.id;
                    var startDateStr = $('#dateTo').val();
                    var endDateStr = $('#dateTo').val();

                    if (startDateStr == "") {
                        startDate = null;
                    }

                    if (endDateStr == "") {
                        endDate = null;
                    }

                    if (id == "dateFrom") {
                        startDate = new Date(dateText);
                    } else {
                        endDate = new Date(dateText);
                    }

                    if (startDate != null && endDate != null) {
                        if (startDate > endDate) {
                            if (id == "dateFrom") {
                                endDate = startDate;
                                $('#dateFrom').val(convertDate(startDate));
                                $('#dateTo').val(convertDate(startDate));
                            } else {
                                startDate = endDate;
                                $('#dateFrom').val(convertDate(endDate));
                                $('#dateTo').val(convertDate(endDate));
                            }
                        } else {
                            $('#dateFrom').val(convertDate(startDate));
                            $('#dateTo').val(convertDate(endDate));
                        }
                    } else {
                        if (startDate == null) {
                            $('#dateTo').val(convertDate(endDate));
                        } else {
                            $('#dateFrom').val(convertDate(startDate));
                        }
                    }

                }
            }).bind("keypress", function (e) {
                if (e.keyCode == 13) {
                    e.preventDefault();
                    e.stopPropagation();
                    var id = e.target.id;
                    $('#' + id).blur();
                }
            });

            function convertDate(inputFormat) {
                function pad(s) { return (s < 10) ? '0' + s : s; }
                var d = new Date(inputFormat);
                return [pad(d.getDate()), pad(d.getMonth() + 1), d.getFullYear()].join('-');
            }

            function keyPressListener(e) {
                if (e.keyCode == 13) {
                    $('input[type=submit]').focus();
                }
                if (e.keyCode == 45) {
                    var id = e.target.id;
                    var str = $('#' + id).val();
                    str += "-";
                    $('#' + id).val(str);
                }
            }

        </script>
