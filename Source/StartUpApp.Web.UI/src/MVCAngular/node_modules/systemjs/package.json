{
  "_args": [
    [
      {
        "raw": "systemjs",
        "scope": null,
        "escapedName": "systemjs",
        "name": "systemjs",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "D:\\Study\\CPJ\\FlyingColors\\Source\\StartUpApp.Web.UI\\src\\MVCAngular"
    ]
  ],
  "_from": "systemjs@latest",
  "_id": "systemjs@0.20.12",
  "_inCache": true,
  "_location": "/systemjs",
  "_nodeVersion": "8.0.0-nightly2017040353828e8bff",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/systemjs-0.20.12.tgz_1491482923289_0.9770134123973548"
  },
  "_npmUser": {
    "name": "guybedford",
    "email": "guybedford@gmail.com"
  },
  "_npmVersion": "4.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "systemjs",
    "scope": null,
    "escapedName": "systemjs",
    "name": "systemjs",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/systemjs/-/systemjs-0.20.12.tgz",
  "_shasum": "135cc471280448453347829ebb9639a09a67f101",
  "_shrinkwrap": null,
  "_spec": "systemjs",
  "_where": "D:\\Study\\CPJ\\FlyingColors\\Source\\StartUpApp.Web.UI\\src\\MVCAngular",
  "author": {
    "name": "Guy Bedford"
  },
  "bugs": {
    "url": "https://github.com/systemjs/systemjs/issues"
  },
  "dependencies": {},
  "description": "Dynamic ES module loader",
  "devDependencies": {
    "babel-core": "^6.21.0",
    "babel-plugin-syntax-dynamic-import": "^6.18.0",
    "babel-plugin-transform-es2015-modules-systemjs": "^6.19.0",
    "bluebird": "^3.4.6",
    "es-module-loader": "^2.1.5",
    "mocha": "^3.1.2",
    "plugin-typescript": "^5.2.7",
    "rollup": "^0.41.1",
    "rollup-plugin-node-resolve": "^2.0.0",
    "rollup-plugin-replace": "^1.1.1",
    "systemjs-plugin-babel": "0.0.17",
    "systemjs-plugin-traceur": "0.0.3",
    "traceur": "0.0.111",
    "typescript": "^2.0.6",
    "uglifyjs": "^2.4.10"
  },
  "directories": {},
  "dist": {
    "shasum": "135cc471280448453347829ebb9639a09a67f101",
    "tarball": "https://registry.npmjs.org/systemjs/-/systemjs-0.20.12.tgz"
  },
  "files": [
    "dist"
  ],
  "gitHead": "c484f143c552a5c5aba875b2089c21a733d50ca6",
  "homepage": "https://github.com/systemjs/systemjs#readme",
  "license": "MIT",
  "main": "dist/system.src.js",
  "maintainers": [
    {
      "name": "guybedford",
      "email": "guybedford@gmail.com"
    }
  ],
  "name": "systemjs",
  "optionalDependencies": {},
  "readme": "SystemJS\n========\n\n[![Build Status][travis-image]][travis-url]\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/systemjs/systemjs?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Support](https://supporterhq.com/api/b/33df4abbec4d39260f49015d2457eafe/SystemJS)](https://supporterhq.com/support/33df4abbec4d39260f49015d2457eafe/SystemJS)\n\nConfigurable module loader enabling dynamic ES module workflows in browsers and NodeJS.\n\n_[SystemJS 0.20 release notes](https://github.com/systemjs/systemjs/releases/tag/0.20.0)_\n\n* [Loads any module format](docs/module-formats.md) when running the ~15KB development build.\n* Loads ES modules compiled into the `System.register` module format for production with [exact circular reference and binding support](https://github.com/ModuleLoader/es6-module-loader/blob/v0.17.0/docs/circular-references-bindings.md)\n* Supports RequireJS-style [map](docs/getting-started.md#map-config), [paths](https://github.com/ModuleLoader/es6-module-loader/blob/master/docs/loader-config.md#paths-implementation), and [bundles](docs/production-workflows.md#bundle-extension) configuration.\n\nBuilt with the [ES Module Loader project](https://github.com/ModuleLoader/es-module-loader), which is based on principles and APIs from the WhatWG Loader specification, modules in HTML and NodeJS.\n\nSupports IE9+ provided a promises polyfill is available in the environment.\n\nFor discussion, join the [Gitter Room](https://gitter.im/systemjs/systemjs).\n\nDocumentation\n---\n\n* [Getting Started](docs/getting-started.md)\n* [Module Formats](docs/module-formats.md)\n* [Production Workflows](docs/production-workflows.md)\n* [Configuration API](docs/config-api.md)\n* [System API](docs/system-api.md)\n* [Plugins](docs/plugins.md)\n* [Creating Plugins](docs/creating-plugins.md)\n* [Production Build and Resolution](docs/production-build.md)\n\nBasic Use\n---\n\n### Browser Development\n\n```html\n<script src=\"systemjs/dist/system.js\"></script>\n<script>\n  SystemJS.import('/js/main.js');\n</script>\n```\n\nThe above will support loading all module formats.\n\n**To load ES6 code with in-browser transpilation, one of the following transpiler plugins must be configured**:\n\n* [Babel](https://github.com/systemjs/plugin-babel)\n* [TypeScript](https://github.com/frankwallis/plugin-typescript)\n* [Traceur](http://github.com/systemjs/plugin-traceur)\n\n### Browser Production\n\nWhen all modules are already transpiled into the `System.register` module format (which can be output via Babel or TypeScript through any build workflow), a production-only loader can be used:\n\n```html\n<script src=\"systemjs/dist/system-production.js\"></script>\n<script>\n  SystemJS.import('/js/main.js');\n</script>\n```\n\nConfiguration support in the production loader includes baseURL, paths, map, contextual map, bundles and depCache.\n\n### NodeJS\n\nTo load modules in NodeJS, install SystemJS with:\n\n```\n  npm install systemjs\n```\n\nIf transpiling ES modules, install the transpiler plugin following the instructions from the transpiler project page.\n\nWe can then load modules equivalently in NodeJS as we do in the browser:\n\n```javascript\nvar SystemJS = require('systemjs');\n\n// loads './app.js' from the current directory\nSystemJS.import('./app.js').then(function (m) {\n  console.log(m);\n});\n```\n\nTo import a module with the NodeJS module resolution, import with `import moduleName from '@node/module-name'`.\n\n#### Running the tests\n\n```\n  npm run build && npm run test\n```\n\nLicense\n---\n\nMIT\n\n[travis-url]: https://travis-ci.org/systemjs/systemjs\n[travis-image]: https://travis-ci.org/systemjs/systemjs.svg?branch=master\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/systemjs/systemjs.git"
  },
  "scripts": {
    "build": "npm run build:dev && npm run build:production",
    "build:dev": "rollup -c",
    "build:production": "rollup -c --environment production",
    "footprint": "npm run footprint:dev && npm run footprint:production",
    "footprint:dev": "uglifyjs dist/system.src.js -cm --screw-ie8 | gzip -9f | wc -c",
    "footprint:production": "uglifyjs dist/system-production.src.js -cm --screw-ie8 | gzip -9f | wc -c",
    "irhydra": "node --trace-hydrogen --trace-phase=Z --trace-deopt --code-comments --hydrogen-track-positions --redirect-code-traces --redirect-code-traces-to=code.asm --print-opt-code --trace_hydrogen_file=hydrogen.cfg irhydra/load.js",
    "min": "npm run min:dev && npm run min:production",
    "min:dev": "cd dist && uglifyjs system.src.js -cm --in-source-map system.src.js.map --source-map system.js.map --screw-ie8 --comments '/SystemJS v/' > system.js",
    "min:production": "cd dist && uglifyjs system-production.src.js -cm --in-source-map system-production.src.js.map --source-map system-production.js.map --screw-ie8 --comments '/SystemJS v/' > system-production.js",
    "prepublish": "rm -r dist && npm run build && npm run min",
    "test": "npm run test:production && npm run test:babel && npm run test:traceur && npm run test:typescript",
    "test:babel": "mocha test/test-babel.js -u tdd --reporter dot",
    "test:production": "mocha test/test-production.js -u tdd --reporter dot",
    "test:traceur": "mocha test/test-traceur.js -u tdd --reporter dot",
    "test:typescript": "mocha test/test-typescript.js -u tdd --reporter dot"
  },
  "version": "0.20.12"
}
